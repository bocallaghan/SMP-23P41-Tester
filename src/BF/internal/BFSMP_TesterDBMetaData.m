
/* Copyright (c) Sybase, Inc. 2010-2013   All rights reserved.
 
 In addition to the license terms set out in the Sybase License Agreement for
 the Sybase Unwired Platform ("Program"), the following additional or different
 rights and accompanying obligations and restrictions shall apply to the source
 code in this file ("Code").  Sybase grants you a limited, non-exclusive,
 non-transferable, revocable license to use, reproduce, and modify the Code
 solely for purposes of (i) maintaining the Code as reference material to better
 understand the operation of the Program, and (ii) development and testing of
 applications created in connection with your licensed use of the Program.
 The Code may not be transferred, sold, assigned, sublicensed or otherwise
 conveyed (whether by operation of law or otherwise) to another party without
 Sybase's prior written consent.  The following provisions shall apply to any
 modifications you make to the Code: (i) Sybase will not provide any maintenance
 or support for modified Code or problems that result from use of modified Code;
 (ii) Sybase expressly disclaims any warranties and conditions, express or
 implied, relating to modified Code or any problems that result from use of the
 modified Code;OT BE LIABLE FOR ANY LOSS OR DAMAGE RELATING
 TO MODIFICATIONS MADE TO THE CODE OR FOR ANY DAMAGES RESULTING FROM USE OF THE
 MODIFIED CODE, INCLUDING, WITHOUT LIMITATION, ANY INACCURACY OF DATA, LOSS OF
 PROFITS OR DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES, EVEN
 IF SYBASE HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES;
 to indemnify, hold harmless, and defend Sybase from and against any claims or
 lawsuits, including attorney's fees, that arise from or are related to the
 modified Code or from use of the modified Code.
 
 */

/*
 Generated by Sybase Unwired Platform 
 Compiler version - 2.3.4.285
*/ 

#import "BFSMP_TesterDBMetaData.h"

#import "SUPObjectList.h"
#import "SUPStringList.h"
#import "SUPClassMap.h"
#import "SUPEntityMap.h"
#import "BFLST_MBO1MetaData.h"  
#import "BFLST_MBO1.h"
#import "BFLST_MBO1+Internal.h"
#import "BFLogRecordImplMetaData.h"  
#import "BFLogRecordImpl.h"
#import "BFLogRecordImpl+Internal.h"
#import "BFOperationReplayMetaData.h"  
#import "BFOperationReplay.h"
#import "BFOperationReplay+Internal.h"
#import "BFSISSubscriptionKeyMetaData.h"  
#import "BFSISSubscriptionKey.h"
#import "BFSISSubscriptionKey+Internal.h"
#import "BFSISSubscriptionMetaData.h"  
#import "BFSISSubscription.h"
#import "BFSISSubscription+Internal.h"
#import "BFPackagePropertiesMetaData.h"  
#import "BFPackageProperties.h"
#import "BFPackageProperties+Internal.h"
#import "BFChangeLogKeyMetaData.h"  
#import "BFChangeLogKey.h"
#import "BFChangeLogKey+Internal.h"
#import "BFChangeLogImplMetaData.h"  
#import "BFChangeLogImpl.h"
#import "BFChangeLogImpl+Internal.h"
#import "BFOfflineAuthenticationMetaData.h"  
#import "BFOfflineAuthentication.h"
#import "BFOfflineAuthentication+Internal.h"
#import "BFKeyPackageNameMetaData.h"  
#import "BFKeyPackageName.h"
#import "BFKeyPackageName+Internal.h"
#import "BFPersonalizationParametersMetaData.h"  
#import "BFPersonalizationParameters.h"
#import "BFPersonalizationParameters+Internal.h"
#import "BFKeyGeneratorMetaData.h"  
#import "BFKeyGenerator.h"
#import "BFKeyGenerator+Internal.h"
#import "BFLocalKeyGeneratorMetaData.h"  
#import "BFLocalKeyGenerator.h"
#import "BFLocalKeyGenerator+Internal.h"

@implementation BFSMP_TesterDBMetaData

+ (BFSMP_TesterDBMetaData*)getInstance
{
    return [[[BFSMP_TesterDBMetaData alloc] init] autorelease];
}

- (id)init
{
    if (self = [super init]) {
		self.id = 0;
		self.databaseName = @"BFSMP_TesterDB";
		self.packageName = @"BF";

		SUPObjectList *classList = [SUPObjectList listWithCapacity:16];
		
		[classList addThis:[BFLST_MBO1 metaData]];
		[BFLST_MBO1 delegate];
		
		[classList addThis:[BFLogRecordImpl metaData]];
		[BFLogRecordImpl delegate];
		
		[classList addThis:[BFOperationReplay metaData]];
		[BFOperationReplay delegate];
		
		[classList addThis:[BFSISSubscriptionKey metaData]];
		[BFSISSubscriptionKey delegate];
		
		[classList addThis:[BFSISSubscription metaData]];
		[BFSISSubscription delegate];
		
		[classList addThis:[BFPackageProperties metaData]];
		[BFPackageProperties delegate];
		
		[classList addThis:[BFChangeLogKey metaData]];
		[BFChangeLogKey delegate];
		
		[classList addThis:[BFChangeLogImpl metaData]];
		[BFChangeLogImpl delegate];
		
		[classList addThis:[BFOfflineAuthentication metaData]];
		[BFOfflineAuthentication delegate];
		
		[classList addThis:[BFKeyPackageName metaData]];
		[BFKeyPackageName delegate];
		
		[classList addThis:[BFPersonalizationParameters metaData]];
		[BFPersonalizationParameters delegate];
		
		[classList addThis:[BFKeyGenerator metaData]];
		[BFKeyGenerator delegate];
		
		[classList addThis:[BFLocalKeyGenerator metaData]];
		[BFLocalKeyGenerator delegate];
		self.classList = classList;
		SUPClassMap *classMap = [SUPClassMap getInstance];
		[classMap setClasses:classList];
		self.classMap = classMap;

		SUPObjectList *entityList = [SUPObjectList listWithCapacity:9];
		
		[entityList addThis:[BFLST_MBO1 metaData]];
		[BFLST_MBO1 delegate];
		
		[entityList addThis:[BFLogRecordImpl metaData]];
		[BFLogRecordImpl delegate];
		
		[entityList addThis:[BFOperationReplay metaData]];
		[BFOperationReplay delegate];
		
		[entityList addThis:[BFSISSubscription metaData]];
		[BFSISSubscription delegate];
		
		[entityList addThis:[BFPackageProperties metaData]];
		[BFPackageProperties delegate];
		
		[entityList addThis:[BFChangeLogImpl metaData]];
		[BFChangeLogImpl delegate];
		
		[entityList addThis:[BFOfflineAuthentication metaData]];
		[BFOfflineAuthentication delegate];
		
		[entityList addThis:[BFKeyGenerator metaData]];
		[BFKeyGenerator delegate];
		
		[entityList addThis:[BFLocalKeyGenerator metaData]];
		[BFLocalKeyGenerator delegate];
		self.entityList = entityList;
	    SUPEntityMap *entityMap = [SUPEntityMap getInstance];
    	[entityMap setEntities:entityList];
	    self.entityMap = entityMap;
		SUPObjectList *attributes = [SUPObjectList listWithCapacity:7];
		self.name = @"SMP_TesterDB";
 
       	// Handle attributes
 		self.attributes = attributes;
 		
 		SUPAttributeMap * attributeMap = [SUPAttributeMap getInstance];
    	[attributeMap setAttributes:attributes];
    	self.attributeMap = attributeMap;

 		// Handle operations
 		int operation_counter = 0;
 		operation_counter++;
 		SUPOperationMetaData* o_createDatabase_0 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"createDatabase":[SUPDataType forName:@"void"]:true];
 		[o_createDatabase_0 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_cleanAllData_1 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"cleanAllData":[SUPDataType forName:@"void"]:true];
  		{
 			int parameters_counter=0;
 			SUPObjectList *parameters_list = nil;
 			parameters_counter++;
 			SUPParameterMetaData* p_cleanAllData_p0 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p0":[SUPDataType forName:@"boolean"]];
 			parameters_list = [SUPObjectList listWithCapacity:parameters_counter];
 			[parameters_list addThis:p_cleanAllData_p0];
 			o_cleanAllData_1.parameters = parameters_list;
 		}
 		[o_cleanAllData_1 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_cleanAllData_0 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"cleanAllData":[SUPDataType forName:@"void"]:true];
 		[o_cleanAllData_0 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_getSyncUsername_0 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"getSyncUsername":[SUPDataType forName:@"string"]:true];
 		[o_getSyncUsername_0 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_loginToSync_2 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"loginToSync":[SUPDataType forName:@"void"]:true];
  		{
 			int parameters_counter=0;
 			SUPObjectList *parameters_list = nil;
 			parameters_counter++;
 			SUPParameterMetaData* p_loginToSync_p0 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p0":[SUPDataType forName:@"string"]];
 			parameters_counter++;
 			SUPParameterMetaData* p_loginToSync_p1 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p1":[SUPDataType forName:@"string"]];
 			parameters_list = [SUPObjectList listWithCapacity:parameters_counter];
 			[parameters_list addThis:p_loginToSync_p0];
 			[parameters_list addThis:p_loginToSync_p1];
 			o_loginToSync_2.parameters = parameters_list;
 		}
 		[o_loginToSync_2 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_onlineLogin_2 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"onlineLogin":[SUPDataType forName:@"void"]:true];
  		{
 			int parameters_counter=0;
 			SUPObjectList *parameters_list = nil;
 			parameters_counter++;
 			SUPParameterMetaData* p_onlineLogin_p0 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p0":[SUPDataType forName:@"string"]];
 			parameters_counter++;
 			SUPParameterMetaData* p_onlineLogin_p1 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p1":[SUPDataType forName:@"string"]];
 			parameters_list = [SUPObjectList listWithCapacity:parameters_counter];
 			[parameters_list addThis:p_onlineLogin_p0];
 			[parameters_list addThis:p_onlineLogin_p1];
 			o_onlineLogin_2.parameters = parameters_list;
 		}
 		[o_onlineLogin_2 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_offlineLogin_2 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"offlineLogin":[SUPDataType forName:@"boolean"]:true];
  		{
 			int parameters_counter=0;
 			SUPObjectList *parameters_list = nil;
 			parameters_counter++;
 			SUPParameterMetaData* p_offlineLogin_p0 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p0":[SUPDataType forName:@"string"]];
 			parameters_counter++;
 			SUPParameterMetaData* p_offlineLogin_p1 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p1":[SUPDataType forName:@"string"]];
 			parameters_list = [SUPObjectList listWithCapacity:parameters_counter];
 			[parameters_list addThis:p_offlineLogin_p0];
 			[parameters_list addThis:p_offlineLogin_p1];
 			o_offlineLogin_2.parameters = parameters_list;
 		}
 		[o_offlineLogin_2 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_synchronize_1 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"synchronize":[SUPDataType forName:@"void"]:true];
  		{
 			int parameters_counter=0;
 			SUPObjectList *parameters_list = nil;
 			parameters_counter++;
 			SUPParameterMetaData* p_synchronize_p0 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p0":[SUPDataType forName:@"string"]];
 			parameters_list = [SUPObjectList listWithCapacity:parameters_counter];
 			[parameters_list addThis:p_synchronize_p0];
 			o_synchronize_1.parameters = parameters_list;
 		}
 		[o_synchronize_1 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_submitPendingOperations_0 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"submitPendingOperations":[SUPDataType forName:@"void"]:true];
 		[o_submitPendingOperations_0 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_synchronize_0 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"synchronize":[SUPDataType forName:@"void"]:true];
 		[o_synchronize_0 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_submitPendingOperations_1 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"submitPendingOperations":[SUPDataType forName:@"void"]:true];
  		{
 			int parameters_counter=0;
 			SUPObjectList *parameters_list = nil;
 			parameters_counter++;
 			SUPParameterMetaData* p_submitPendingOperations_p0 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p0":[SUPDataType forName:@"string"]];
 			parameters_list = [SUPObjectList listWithCapacity:parameters_counter];
 			[parameters_list addThis:p_submitPendingOperations_p0];
 			o_submitPendingOperations_1.parameters = parameters_list;
 		}
 		[o_submitPendingOperations_1 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_cancelPendingOperations_0 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"cancelPendingOperations":[SUPDataType forName:@"void"]:true];
 		[o_cancelPendingOperations_0 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_submitLogRecords_0 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"submitLogRecords":[SUPDataType forName:@"void"]:true];
 		[o_submitLogRecords_0 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_deleteDatabase_0 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"deleteDatabase":[SUPDataType forName:@"void"]:true];
 		[o_deleteDatabase_0 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_isSynchronized_1 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"isSynchronized":[SUPDataType forName:@"boolean"]:true];
  		{
 			int parameters_counter=0;
 			SUPObjectList *parameters_list = nil;
 			parameters_counter++;
 			SUPParameterMetaData* p_isSynchronized_p0 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p0":[SUPDataType forName:@"string"]];
 			parameters_list = [SUPObjectList listWithCapacity:parameters_counter];
 			[parameters_list addThis:p_isSynchronized_p0];
 			o_isSynchronized_1.parameters = parameters_list;
 		}
 		[o_isSynchronized_1 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_getLastSynchronizationTime_1 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"getLastSynchronizationTime":[SUPDataType forName:@"dateTime"]:true];
  		{
 			int parameters_counter=0;
 			SUPObjectList *parameters_list = nil;
 			parameters_counter++;
 			SUPParameterMetaData* p_getLastSynchronizationTime_p0 = [SUPParameterMetaData createParameterMetaData:parameters_counter:(SUPString)@"p0":[SUPDataType forName:@"string"]];
 			parameters_list = [SUPObjectList listWithCapacity:parameters_counter];
 			[parameters_list addThis:p_getLastSynchronizationTime_p0];
 			o_getLastSynchronizationTime_1.parameters = parameters_list;
 		}
 		[o_getLastSynchronizationTime_1 setIsStatic:YES];
 		operation_counter++;
 		SUPOperationMetaData* o_getPersonalizationParameters_0 = [SUPOperationMetaData createOperationMetaData:operation_counter:(SUPString)@"getPersonalizationParameters":[SUPDataType forName:@"PersonalizationParameters"]:true];
 		[o_getPersonalizationParameters_0 setIsStatic:YES];
 
 
  		SUPObjectList *operations = [SUPObjectList listWithCapacity:operation_counter];
 		[operations addThis:o_createDatabase_0];
 		[operations addThis:o_cleanAllData_1];
 		[operations addThis:o_cleanAllData_0];
 		[operations addThis:o_getSyncUsername_0];
 		[operations addThis:o_loginToSync_2];
 		[operations addThis:o_onlineLogin_2];
 		[operations addThis:o_offlineLogin_2];
 		[operations addThis:o_synchronize_1];
 		[operations addThis:o_submitPendingOperations_0];
 		[operations addThis:o_synchronize_0];
 		[operations addThis:o_submitPendingOperations_1];
 		[operations addThis:o_cancelPendingOperations_0];
 		[operations addThis:o_submitLogRecords_0];
 		[operations addThis:o_deleteDatabase_0];
 		[operations addThis:o_isSynchronized_1];
 		[operations addThis:o_getLastSynchronizationTime_1];
 		[operations addThis:o_getPersonalizationParameters_0];
 		self.operations = operations;
 		
		SUPOperationMap *operationMap = [SUPOperationMap getInstance];
		[operationMap setOperations:operations];
		self.operationMap = operationMap;

		SUPStringList *publications = [SUPStringList getInstance];
		NSMutableDictionary *publicationsToEntities = [[[NSMutableDictionary alloc] init] autorelease];
		[publications add:@"unsubscribe"];
		SUPObjectList *unsubscribeEntities = [SUPObjectList getInstance];
    	
		[unsubscribeEntities add:[BFKeyGeneratorMetaData getInstance]];
		[publicationsToEntities setObject:unsubscribeEntities forKey:@"unsubscribe"];
		
		[publications add:@"system"];
		SUPObjectList *systemEntities = [SUPObjectList getInstance];
    	
		[systemEntities add:[BFLogRecordImplMetaData getInstance]];
    	
		[systemEntities add:[BFOperationReplayMetaData getInstance]];
    	
		[systemEntities add:[BFSISSubscriptionMetaData getInstance]];
    	
		[systemEntities add:[BFPackagePropertiesMetaData getInstance]];
    	
		[systemEntities add:[BFKeyGeneratorMetaData getInstance]];
		[publicationsToEntities setObject:systemEntities forKey:@"system"];
		
		[publications add:@"initialSync"];
		SUPObjectList *initialSyncEntities = [SUPObjectList getInstance];
    	
		[initialSyncEntities add:[BFPackagePropertiesMetaData getInstance]];
    	
		[initialSyncEntities add:[BFKeyGeneratorMetaData getInstance]];
		[publicationsToEntities setObject:initialSyncEntities forKey:@"initialSync"];
		
		self.publicationsMap = publicationsToEntities;
		self.publications = publications;
    }
    return self;
}


@end